pipeline {
    agent {
        node {
            label 'dev-server'
        }
    }
    environment {
        APP_NAME = "skill-ageing"
        MAJOR_RELEASE = 0.1
        DOCKER_TAG = "${MAJOR_RELEASE}.${env.BUILD_NUMBER}"
        DOCKER_REG = "harbor.skillab-project.eu"
        DOCKER_REPO = "/skillab-all/"
        DOCKER_REG_CREDS = "harbor-creds"
    }

    stages {
        // *************************
        // *** IMAGE BUILD STAGE ***
        // *************************
        stage("Build_Docker_Images"){
            steps {
                echo "***** Building Docker Image *****"
                withCredentials([usernamePassword(credentialsId: 'tracker-api-creds', usernameVariable: 'TRACKER_USER', passwordVariable: 'TRACKER_PASS')]) {
                    sh """
                        echo "TRACKER_USERNAME=${TRACKER_USER}" >> .env
                        echo "TRACKER_PASSWORD=${TRACKER_PASS}" >> .env
                        docker compose build
                    """
                }
            }
        }

        // ******************
        // *** UNIT TESTS ***
        // ******************
        stage("Run Unit Tests") {
            steps {
                echo "***** ToDo.. Run Unit Tests in Docker *****"
            }
        }

        // ****************************
        // *** Push Images In Harbor ***
        // ****************************
        stage("Push_Image"){
            when {
                environment name: "GIT_BRANCH", value: "origin/main"
            }
            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: "${DOCKER_REG_CREDS}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]){
                    echo "***** Push Docker Image *****"
                    sh '''
                        docker login ${DOCKER_REG} -u ${USERNAME} -p ${PASSWORD}
                        docker tag ${DOCKER_REG}${DOCKER_REPO}${APP_NAME}:${DOCKER_TAG} ${DOCKER_REG}${DOCKER_REPO}${APP_NAME}:latest
                        docker image push ${DOCKER_REG}${DOCKER_REPO}${APP_NAME}:${DOCKER_TAG}
                        docker image push ${DOCKER_REG}${DOCKER_REPO}${APP_NAME}:latest
                    '''
                }
            }
        }
        
        // **************
        // *** Deploy ***
        // **************
        stage("Deployment"){
            when {
                environment name: "GIT_BRANCH", value: "origin/main"
            }

            steps {
                withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: "${DOCKER_REG_CREDS}", usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]){
                    echo "***** Deploy Application *****"
                    sh 'docker login ${DOCKER_REG} -u ${USERNAME} -p ${PASSWORD}'
                    sh 'docker compose pull'
                    sh 'docker compose up -d'
                    sh 'docker ps'
                }
            }
        }
    }
    post{
        failure{
            sh 'docker compose down --rmi all || true'
        }
    }
}